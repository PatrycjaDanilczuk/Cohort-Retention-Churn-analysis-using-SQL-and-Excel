WITH week_0 AS
    (SELECT DISTINCT /*selecting distinct rows to remove duplicated rows; all columns are selected in CTE in case there are users with more than one category wchich can be churned in differnet weeks; country doesn't create duplicates; CTE result 274.362 rows*/
    user_pseudo_id AS user,
    category,
    country,
    subscription_start AS start_date,
    DATETIME_TRUNC(subscription_start, WEEK) AS start_week,
    subscription_end AS end_date,
    DATETIME_TRUNC(subscription_end, WEEK) AS end_week
    FROM `turing_data_analytics.subscriptions`

ORDER BY subscription_start),

retained AS
(SELECT
    start_week AS cohort,
    /*calculating starting number of users per each cohort*/
    COUNT(user) AS week_0,
    /*calculating retained user per each week for each cohort*/
    COUNT(IF(DATE_DIFF(end_week, start_week, WEEK) > 0 OR end_week IS NULL, user, NULL)) AS week_1,
    COUNT(IF((DATE_DIFF(end_week, start_week, WEEK) > 1 OR end_week IS NULL) AND
        start_week < (SELECT MAX(start_week) FROM week_0), user, NULL)) AS week_2,
    COUNT(IF((DATE_DIFF(end_week, start_week, WEEK) > 2 OR end_week IS NULL) AND
        start_week < (SELECT DATETIME_SUB(MAX(start_week), INTERVAL 1 WEEK) FROM week_0), user, NULL)) AS week_3,
    COUNT(IF((DATE_DIFF(end_week, start_week, WEEK) > 3 OR end_week IS NULL) AND
        start_week < (SELECT DATETIME_SUB(MAX(start_week), INTERVAL 2 WEEK) FROM week_0), user, NULL)) AS week_4,
    COUNT(IF((DATE_DIFF(end_week, start_week, WEEK) > 4 OR end_week IS NULL) AND
        start_week < (SELECT DATETIME_SUB(MAX(start_week), INTERVAL 3 WEEK) FROM week_0), user, NULL)) AS week_5,
    COUNT(IF((DATE_DIFF(end_week, start_week, WEEK) > 5 OR end_week IS NULL) AND
        start_week < (SELECT DATETIME_SUB(MAX(start_week), INTERVAL 4 WEEK) FROM week_0), user, NULL)) AS week_6
FROM
    week_0
GROUP BY
    cohort
ORDER BY
    cohort)

/*calculating retention rate*/
SELECT
cohort,
week_0/week_0 AS week_0,
ROUND(week_1/week_0, 3) AS week_1,
ROUND(week_2/week_0, 3) AS week_2,
ROUND(week_3/week_0, 3) AS week_3,
ROUND(week_4/week_0, 3) AS week_4,
ROUND(week_5/week_0, 3) AS week_5,
ROUND(week_6/week_0, 3) AS week_6
FROM retained
